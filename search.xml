<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Mac下express的安装和新建项目]]></title>
      <url>%2F2017%2F01%2F13%2FMac%E4%B8%8Bexpress%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE%2F</url>
      <content type="text"><![CDATA[在《Mac下安装Node.js、测试、输出json》我的电脑已经安装了node.js。 一、安装express打开终端1.需先安装express-generator1npm install -g express-generator 2.安装express1npm install -g express 3.验证是否安装成功1express --version 二、新建项目还是打开终端1.新建ejs模板，(还有jade模板，请自行百度怎么新建)1express --view=ejs Express 1--view=ejs 表示新建的ejs模板的项目，Express是项目名字这时效果如下：123456789101112131415161718192021222324252627Last login: Fri Jan 13 13:38:16 on ttys000hgdqdeMacBook-Pro:~ hgdq$ express --view=ejs Express create : Express create : Express/package.json create : Express/app.js create : Express/public create : Express/public/images create : Express/public/stylesheets create : Express/public/stylesheets/style.css create : Express/routes create : Express/routes/index.js create : Express/routes/users.js create : Express/views create : Express/views/index.ejs create : Express/views/error.ejs create : Express/bin create : Express/bin/www install dependencies: $ cd Express &amp;&amp; npm install run the app: $ DEBUG=express:* npm start create : Express/public/javascriptshgdqdeMacBook-Pro:~ hgdq$ 2.下面已经提示了我们要先cd到项目目录和安装依赖1cd Express &amp;&amp; npm install 3.启动项目:1npm start 4.浏览器查看1http://localhost:3000 这里的localhost可以是你的IP地址。看见上面这个图就表示已经成功了。 三、项目目录打开Express/bin目录下面的www.js文件文件你就会知道为什么在浏览器输入http://localhost:3000就可以查看了。 四、express官网express官网]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Mac下安装Node.js、测试、输出json]]></title>
      <url>%2F2017%2F01%2F12%2FMac%E4%B8%8B%E5%AE%89%E8%A3%85Node-js%E3%80%81%E6%B5%8B%E8%AF%95%E3%80%81%E8%BE%93%E5%87%BAjson%2F</url>
      <content type="text"><![CDATA[一、什么是node.js关于这个百度百科会有专业解释：node.js 二、Node.js的安装关于Node.js的安装大家可以去菜鸟教程查看–Node.js 安装配置安装完成之后,我们可以在终端输入1node -v 查看，如果安装正确，这时就会打印node.js的版本。至此表示你的node.js已经安装正确。 三、测试1.我们新建一个js文件，输入以下代码：123456789101112// 添加依赖模块var http = require('http');http.createServer(function (request, response) &#123;// 发送 HTTP 头部 // HTTP 状态值: 200 : OK// 内容类型: text/plainresponse.writeHead(200, &#123;'Content-Type': 'text/plain'&#125;);// 发送响应数据 "Hello World"response.end('Hello World\n');&#125;).listen(8888);// 终端打印如下信息console.log('Server running at http://127.0.0.1:8888/'); 2.然后在终端cd到js文件所在目录，执行1node test.js test是你的js文件名。效果如图： 四、输出json各式的数据通常我们在左app的时候，前后端是通过接口对接的，数据各式一般都是json各式,其实node.js也可以返回json各式的数据。这里我们只需要修改上面的代码即可：12345678910111213// 添加依赖模块var http = require('http');http.createServer(function (request, response) &#123;// 发送 HTTP 头部 // HTTP 状态值: 200 : OK// 内容类型: application/json// 字符编码：charset=utf-8 解决返回的json数据里面的中文乱码response.writeHead(200, &#123;'Content-Type': 'application/json;charset=utf-8'&#125;);// 发送响应json数据response.end(JSON.stringify(&#123;name:'湖工电气',value:'测试的json数据'&#125;));&#125;).listen(8888);// 终端打印如下信息console.log('Server running at http://127.0.0.1:8888/'); 输出效果如下：最后，node.js我们也安装了，也测试了。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F01%2F09%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
